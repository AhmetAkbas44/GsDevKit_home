#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2014, 2015, 2016 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/GsDevKit/GsDevKit_home/blob/master/license.txt
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "              path: $0"
echo "================="

theArgs="$*"
source ${GS_HOME}/bin/private/shFeedback

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name> [<topaz-commandLine-args>]

Run topaz for the given stone.

OPTIONS
  -h 
     display help

EXAMPLES
  $(basename $0) -h
  $(basename $0) gs_329 -l -T 50000
  $(basename $0) gs_329

HELP
}

set -e # exit on error

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* || "$PLATFORM" == MSYS_NT* ]] ; then
  echo "This script is a server-only script and cannot be used on Windows"
  exit 1
fi

if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"; exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env
if [ "$GS_SERVER{}x" = "x" ] ; then
  echo "the GS_SERVER environment variable needs to be defined"
  echo "Perhaps a stone has not been create yet?"
  exit 1
fi

source ${GS_HOME}/bin/private/shFunctions
getOpts_help $@

if [ $# -lt 1 ]; then
  usage; echo "missing required <stone-name>"; exit 1
fi

stoneName=$1
shift 1

stonePath=$GS_SERVER_STONES/$stoneName

if [ ! -d "$stonePath" ] ; then
  echo "The stone $stoneName does not exist"
  exit 1
fi

# set up stone environment
pushd $stonePath $stonePath >& /dev/null
  source $stonePath/stone.env
popd >& /dev/null

$GEMSTONE/bin/topaz -I $stonePath/.topazini $*

echo "...finished $(basename $0)"
