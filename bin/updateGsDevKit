#! /bin/bash
#=========================================================================
# Copyright (c) 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "              path: $0"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-s] [-g]
Update the clones for each of the installed GsDevKit modules:
  GsDevKit_home
  GsDevKit_gs_server
  GsDevKit_gs_client
  GsDevKit_sys_local
  GsDevKit_todeClient
  GsDevKit_gemtools

Update the GsDevKit command line image.

OPTIONS
  -h 
     display help
  -g
     skip update of GsDevKit command line image.
  -s 
     skip updateClone

EXAMPLES
  $(basename $0) -h
  $(basename $0) -g 
  $(basename $0) -s
  $(basename $0) -g -s
  $(basename $0) 

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"
  exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env

skipCommandLine="false"
skipUpdateClone="false"
while getopts "hgs" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    g) skipCommandLine="true";;
    s) skipUpdateClone="true";;
    *) echo "unknown option $OPT"; usage; exit 1;;
  esac
done
shift $(($OPTIND - 1))

source ${GS_HOME}/bin/private/gitFunctions

updateClone master "$GS_HOME"

if [ -d "$GS_SERVER" ]; then
  updateClone master "$GS_SERVER"
fi

if [ -d "$GS_CLIENT_DEV" ]; then
  $GS_CLIENT_DEV/bin/updateGsDevKit
fi

if [ -d "$GS_HOME/local" ]; then
  updateClone master "$GS_HOME/local"
fi

if [ "$skipUpdateClone" = 'false' ] ; then
  $GS_HOME/bin/utils/updateSharedTodeProjectsClone client
fi

if [ "$skipCommandLine" = "false" ] ; then
  $GS_HOME/bin/private/gsDevKitCommandLine -F
fi

echo "...finished $(basename $0)"
