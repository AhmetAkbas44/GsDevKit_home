#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2014, 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "              path: $0"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-b] [-C] [-N] [-R] [-r] [-w <waitstone-timeout>] <stone-name>

 Start the stone process for the given stone.

OPTIONS
  -b
     Start netldi
  -r 
     Restart stone if running
  -C 
     Startup for conversion.
  -h 
     display help
  -N
     Startup without transaction logs.
  -R
     Startup for restore 
  -w <waitstone-timeout>
     if present wait up to <waitstone-timeout> minutes for the stone to 
     properly start

EXAMPLES
  $(basename $0) -h
  $(basename $0) gs_326
  $(basename $0) -w 5 gs_326

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* || "$PLATFORM" == MSYS_NT* ]] ; then
  echo "This script is a server-only script and cannot be used on Windows"
  exit 1
fi

set -e # exit on error
waitTime=""
ARG=""
startnetldi=""
restart=""
while getopts "bhrw:CNR" OPT ; do
  case "$OPT" in
    b) startnetldi="true" ;;
    C) 
      if [ "${ARG}x" != "x" ] ; then 
        echo "Only one of -C -N or -R options may be specified"
        exit 1
      fi
      ARG="-C"
    ;;
    h) usage; exit 0 ;;
    N)
      if [ "${ARG}x" != "x" ] ; then 
        echo "Only one of -C -N or -R options may be specified"
        exit 1
      fi
      ARG="-N"
    ;;
    R)
      if [ "${ARG}x" != "x" ] ; then 
        echo "Only one of -C -N or -R options may be specified"
        exit 1
      fi
      ARG="-R"
    ;;
    r) restart="true" ;;
    w) waitTime="${OPTARG}" ;;
    *) usage; exit 1 ;;
  esac
done
shift $(($OPTIND - 1))

if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"; exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env
if [ "$GS_SERVER{}x" = "x" ] ; then
  echo "the GS_SERVER environment variable needs to be defined"
  echo "Perhaps a stone has not been create yet?"
  exit 1
fi

if [ $# -ne 1 ]; then
  usage; exit 1
fi
stoneName=$1
stonePath=$GS_SERVER_STONES/$stoneName

if [ ! -d "$stonePath" ] ; then
  echo "The stone $stoneName does not exist"
  exit 1
fi

# set up stone environment
pushd $stonePath $stonePath >& /dev/null
  source $stonePath/stone.env
popd >& /dev/null

if [ "${restart}x" = "x" ] ; then
  set +e
  $stonePath/product/bin/waitstone $stoneName  -1
  status=$?
  if [ $status -eq 0 ] ; then
    echo "stone $stoneName already running, to restart use -r option"
    exit 0
  fi
  set -e
fi

# start the stone
$GS_HOME/bin/devKitCommandLine startstone $stoneName $ARG

if [ "${waitTime}x" = "x" ] ; then
  if [ "${GS_TRAVIS}x" != "x" ] ; then
    $stonePath/product/bin/waitstone $stoneName 2
  fi
else
  $stonePath/product/bin/waitstone $stoneName $waitTime
fi

if [ "${startnetldi}" = "true" ] ; then
  $GS_HOME/bin/startNetldi $stoneName
fi

echo "...finished $(basename $0)"
