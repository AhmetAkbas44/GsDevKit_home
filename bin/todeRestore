#! /bin/bash
#=========================================================================
# Copyright (c) 2014, 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] <stone-name> <backup-file>

Restore a backup for the given stone.

tODE needs to be installed in the stone.

OPTIONS
  -h display help

EXAMPLES
  $(basename $0) -h
  $(basename $0) gs_329 home.dbf

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"; exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env
if [ "$GS_GS_SERVER{}x" = "x" ] ; then
  echo "the GS_GS_SERVER environment variable needs to be defined"
  echo "Perhaps a stone has not been create yet?"
  exit 1
fi

source ${GS_HOME}/bin/privateshFunctions
getOpts_help $@

if [ $# -ne 2 ]; then
  usage; exit 1
fi
stoneName=$1
backupFile=$2

echo "Restoring backup for stone: $stoneName using: $backupFile"

# set up stone environment
stonePath=$GS_GS_SERVER_STONES/$stoneName
pushd $stonePath >& /dev/null
 source $stonePath/stone.env
popd >& /dev/null

# do tODE restore
$GS_HOME/bin/gsDevKitTodeCommandLine restoreFromBackup $stoneName $backupFile

echo "...finished $(basename $0)"
