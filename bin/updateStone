#! /bin/bash
#=========================================================================
# Copyright (c) 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "              path: $0"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-s] <stone-name>...
Update GsDevKit server clones and the named tODE stones.

OPTIONS
  -h 
     display help
  -s
     skip updateClone

EXAMPLES
  $(basename $0) -h
  $(basename $0) tode
  $(basename $0) -s tode
  $(basename $0) gemtools_329
  $(basename $0) jade_329

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* ]] ; then
  echo "This script is a server-only script and cannot be used on Windows"
  exit 1
fi

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"
  exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env

skipUpdateClone="false"
while getopts "hs" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    s) skipUpdateClone="true";;
    *) echo "unknown argument $OPT"; usage; exit 1;;
  esac
done
shift $(($OPTIND - 1))

if [ $# -lt 1 ]; then
  echo "missing stone name args"; usage; exit 1
fi

if [ "$skipUpdateClone" = 'false' ] ; then
  $GS_HOME/bin/utils/updateSharedTodeProjectsClone server
fi

for stoneName in "$@"
do
  if [ -d "${GS_SERVER_STONES}/$stoneName/" ] ; then
    $GS_SYS/bin/updateTode $stoneName
  else
    echo "stone $stoneName does not exist"
  fi
done

echo "...finished $(basename $0)"
