#! /bin/bash
#=========================================================================
# Copyright (c) 2014, 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h]

Perform commands implemented using $GS_GS_SERVER_PHARO/gsDevKitCommandLine.image.

OPTIONS
  -h display help

EXAMPLES
  $(basename $0) -h
  $(basename $0)

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"
  exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env
if [ "$GS_GS_SERVER{}x" = "x" ] ; then
  echo "the GS_GS_SERVER environment variable needs to be defined"
  echo "Perhaps a stone has not been create yet?"
  exit 1
fi
source ${GS_HOME}/bin/private/winRunPharoFunctions

case "$1" in
  --*) # pass to tode
    ;;
  -*) # handle single - options here
    while getopts "h" OPT ; do
      case "$OPT" in
        h) usage; exit 0 ;;
      esac
    done
    ;;
  *)  # pass everything else to tode
    ;;
esac

if [ ! -e "${GS_SHARED_PHARO}/gsDevKitCommandLine.image" ] ; then
  $GS_SHARED/bin/create_gs_server_image -d $GS_SHARED_PHARO gsDevKitCommandLine
fi

# Run script
# Detect operating system
PLATFORM="`uname -sm | tr ' ' '-'`"

pharoCmd="${GS_SHARED_PHARO}/pharo"
case "$PLATFORM" in
  MINGW32_NT*) 
    pharoCmd=win_run_pharo ${GS_SHARED_PHARO} --headless  ${GS_SHARED_PHARO}/gsDevKitCommandLine.image $*
    cat ${GS_SHARED_PHARO}
    exit 0
    ;;
esac
$pharoCmd ${GS_SHARED_PHARO}/gsDevKitCommandLine.image $*
