#! /bin/bash
#=========================================================================
# Copyright (c) 2014, 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-f] [-i] [<gsDevKit-tode-command-line>]

Perform commands specified in <gsDevKit-tode-command-line> against
$GS_GS_SERVER_PHARO/gsDevKitTodeCommandLine.image.

OPTIONS
  -h 
     display help
  -f 
     rebuild gsDevKitTodeCommandLine.image before executing 
     <gsDevKit-tode-command-line>
  -i
     start gsDevKitTodeCommandLine.image interactively for development or 
     debugging  <gsDevKit-tode-command-line>

EXAMPLES
  $(basename $0) -h
  $(basename $0) restoreFromBackup gs_329 wip.dbf
  $(basename $0) -f restoreFromBackup gs_329 wip.dbf
  $(basename $0) -i

HELP
}

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"
  exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env
if [ "$GS_GS_SERVER{}x" = "x" ] ; then
  echo "the GS_GS_SERVER environment variable needs to be defined"
  echo "Perhaps a stone has not been create yet?"
  exit 1
fi

force="false"
interactive="false"
case "$1" in
  --*) # pass to tode
    ;;
  -*) # handle single - options here
    while getopts "fhi" OPT ; do
      case "$OPT" in
        h) usage; exit 0 ;;
        f) force="true";;
        i) interactive="true";;
      esac
    done
    ;;
  *)  # pass everything else to tode
    ;;
esac

if [ "$force" = "true" ] ; then
  rm -rf "${GS_SHARED_PHARO}/gsDevKitTodeCommandLine.image"
fi
if [ ! -e "${GS_SHARED_PHARO}/gsDevKitTodeCommandLine.image" ] ; then
  $GS_SHARED/bin/create_gs_server_image -d $GS_SHARED_PHARO gsDevKitTodeCommandLine
fi

pharoCmd="${GS_SHARED_PHARO}/pharo"
if [ "$interactive" = "true" ] ; then
  pharoCmd="${GS_SHARED_PHARO}/pharo-ui"
fi

# Run script
$pharoCmd ${GS_SHARED_PHARO}/gsDevKitTodeCommandLine.image $*
