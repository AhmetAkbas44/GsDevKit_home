#! /bin/bash
#=========================================================================
# Copyright (c) 2014, 2015 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#=========================================================================

echo "================="
echo "   GsDevKit script: $(basename $0) $*"
echo "              path: $0"
echo "================="

usage() {
  cat <<HELP
USAGE: $(basename $0) [-h] [-i] <stone-name> <backup-file>

Create a GemStone backup for the given stone. 

tODE needs to be installed in the stone.

OPTIONS
  -h display help
  -i launch command line image for interactive debugging

EXAMPLES"
  $(basename $0) -h
  $(basename $0) gs_329 home.dbf

HELP
}

PLATFORM="`uname -sm | tr ' ' '-'`"
if [[ "$PLATFORM" == MINGW32_NT* ]] ; then
  echo "This script is a server-only script and cannot be used on Windows"
  exit 1
fi

set -e # exit on error
if [ "${GS_HOME}x" = "x" ] ; then
  echo "the GS_HOME environment variable needs to be defined"; exit 1
fi
source ${GS_HOME}/bin/defGsDevKit.env
if [ "${GS_SERVER}x" = "x" ] ; then
  echo "the GS_SERVER environment variable needs to be defined"
  echo "Perhaps a stone has not been create yet?"
  exit 1
fi

interactiveArg=""
while getopts "hi" OPT ; do
  case "$OPT" in
    h) usage; exit 0;;
    i) interactiveArg=" -i ";;
    *) echo "unknown option: $OPT"; usage; exit 1;;
  esac
done
shift $(($OPTIND - 1))

if [ $# -ne 2 ]; then
  usage; exit 1
fi
stoneName=$1
backupFile=$2

echo "Backing up stone: $stoneName using: $backupFile"

# set up stone environment
stonePath=$GS_SERVER_STONES/$stoneName
source $stonePath/stone.env

# do tODE backup
$GS_HOME/bin/private/gsDevKitTodeCommandLine $interactiveArg backup $stoneName $backupFile

echo "...finished $(basename $0)"
